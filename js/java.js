// Array mit Emojis definieren Windows-Taste + .
const emojis = ["üòÅ","üòÅ","‚ù§Ô∏è","‚ù§Ô∏è","üòò","üòò","ü§¢","ü§¢","üò∂‚Äçüå´Ô∏è","üò∂‚Äçüå´Ô∏è","ü•∂","ü•∂","üëΩ","üëΩ","üí©","üí©"];
let playerName = ''; // Variable zum Speichern des Spielernamens
let rounds = 0; // Variable zum Speichern der Anzahl der gespielten Runden



// Funktion zum Starten des Spiels
function startGame() {
    // √úberpr√ºfen, ob ein Name bereits gesetzt ist
    if (!playerName) {
        playerName = prompt("Bitte gib deinen Namen ein:");
    }
    document.querySelector('.player-name').innerText = `Spieler: ${playerName}`;
    
    // Array mit zuf√§llig sortierten Emojis erstellen
    var shuf_emojis = emojis.sort(() => (Math.random() > .5) ? 2 : -1);

    // Spielfelder leeren
    document.querySelector('.game').innerHTML = '';

    // Schleife zum Erstellen der Spielfelder
    for (var i = 0; i < emojis.length; i++){
        // Div-Element f√ºr jedes Spielfeld erstellen
        let box = document.createElement('div')
        box.className = 'item'; // CSS-Klasse f√ºr Styling hinzuf√ºgen
        box.innerHTML = shuf_emojis[i]; // Emoji in das Spielfeld einf√ºgen

        // Eventlistener f√ºr das Klicken auf das Spielfeld hinzuf√ºgen
        box.onclick = function(){
            this.classList.add('boxOpen'); // Dem angeklickten Spielfeld eine Klasse hinzuf√ºgen

            // Verz√∂gerungsfunktion f√ºr das Vergleichen der offenen Spielfelder
            setTimeout(function(){
                if(document.querySelectorAll('.boxOpen').length > 1){
                    // Wenn zwei Spielfelder ge√∂ffnet sind
                    if(document.querySelectorAll('.boxOpen')[0].innerHTML == 
                    document.querySelectorAll('.boxOpen')[1].innerHTML){

                        // Wenn die beiden ge√∂ffneten Spielfelder identisch sind
                        document.querySelectorAll('.boxOpen')[0].classList.add('boxMatch'); // Klasse f√ºr √ºbereinstimmende Spielfelder hinzuf√ºgen
                        document.querySelectorAll('.boxOpen')[1].classList.add('boxMatch');

                        // Ge√∂ffnete Spielfelder schlie√üen
                        document.querySelectorAll('.boxOpen')[1].classList.remove('boxOpen');
                        document.querySelectorAll('.boxOpen')[0].classList.remove('boxOpen');

                        // √úberpr√ºfen, ob alle Spielfelder √ºbereinstimmen und das Spiel gewonnen ist
                        if(document.querySelectorAll('.boxMatch').length == emojis.length){
                            alert('Gewonnen!'); // Benachrichtigung √ºber den Gewinn anzeigen
                        }

                    } else {
                        // Wenn die ge√∂ffneten Spielfelder nicht √ºbereinstimmen
                        document.querySelectorAll('.boxOpen')[1].classList.remove('boxOpen'); // Ge√∂ffnete Spielfelder schlie√üen
                        document.querySelectorAll('.boxOpen')[0].classList.remove('boxOpen');
                    }
                }
            },500) // Zeitverz√∂gerung f√ºr die √úberpr√ºfung der offenen Spielfelder
        }

        // Spielfeld dem HTML-Element mit der Klasse 'game' hinzuf√ºgen
        document.querySelector('.game').appendChild(box);
    }
}

// Funktion zum √Ñndern des Namens
function changeName() {
    playerName = prompt("Bitte gib deinen neuen Namen ein:");
    document.querySelector('.player-name').innerText = `Spieler: ${playerName}`;
}

// Funktion zum Herunterladen des Spiels als ZIP
function downloadGameAsZip() {
    let zip = new JSZip();
    zip.file("../pages/memory.html", document.documentElement.outerHTML);
    zip.file("../styles/styleMike.css", "/* Dein CSS-Code hier */");
    zip.file("../js/java.js", document.querySelector('script[src="java.js"]').innerHTML);

    zip.generateAsync({type: "blob"}).then(function(content) {
        saveAs(content, "memory-game.zip");
    });
}

// Eventlistener f√ºr den Neustart-Button hinzuf√ºgen
document.querySelector('.reset').addEventListener('click', function() {
    rounds++; // Anzahl der Runden erh√∂hen
    document.querySelector('.rounds').innerText = `Runden: ${rounds}`;
    startGame();
});

// Eventlistener f√ºr den Namens√§nderungs-Button hinzuf√ºgen
document.querySelector('.change-name').addEventListener('click', changeName);

// Eventlistener f√ºr den Download-Button hinzuf√ºgen
document.querySelector('.download-zip').addEventListener('click', downloadGameAsZip);

// Spiel beim Laden der Seite starten
startGame();
